Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              ./obj/avr/atmega644/gcc/bootloader.c.o (__do_clear_bss)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
 .data          0x0000000000000000        0x0 ./obj/avr/atmega644/gcc/bootloader.c.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
START GROUP
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libm.a
END GROUP
LOAD ./obj/avr/atmega644/gcc/bootloader.c.o
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3ea
 *(.vectors)
 .vectors       0x0000000000000000       0x70 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000070                . = ALIGN (0x2)
                0x0000000000000070                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000070        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000070                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000070                __ctors_start = .
 *(.ctors)
                0x0000000000000070                __ctors_end = .
                0x0000000000000070                __dtors_start = .
 *(.dtors)
                0x0000000000000070                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000070        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
                0x0000000000000070                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000070        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000007c       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000007c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008c        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
 *(.init9)
 *(.text)
 .text          0x0000000000000094        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
                0x0000000000000094                __vector_22
                0x0000000000000094                __vector_1
                0x0000000000000094                __vector_24
                0x0000000000000094                __vector_12
                0x0000000000000094                __bad_interrupt
                0x0000000000000094                __vector_6
                0x0000000000000094                __vector_3
                0x0000000000000094                __vector_23
                0x0000000000000094                __vector_25
                0x0000000000000094                __vector_11
                0x0000000000000094                __vector_13
                0x0000000000000094                __vector_17
                0x0000000000000094                __vector_19
                0x0000000000000094                __vector_7
                0x0000000000000094                __vector_27
                0x0000000000000094                __vector_5
                0x0000000000000094                __vector_4
                0x0000000000000094                __vector_9
                0x0000000000000094                __vector_2
                0x0000000000000094                __vector_21
                0x0000000000000094                __vector_15
                0x0000000000000094                __vector_8
                0x0000000000000094                __vector_26
                0x0000000000000094                __vector_14
                0x0000000000000094                __vector_10
                0x0000000000000094                __vector_16
                0x0000000000000094                __vector_18
                0x0000000000000094                __vector_20
 .text          0x0000000000000098       0xf8 ./obj/avr/atmega644/gcc/bootloader.c.o
                0x0000000000000190                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000190      0x256 ./obj/avr/atmega644/gcc/bootloader.c.o
                0x0000000000000190                main
                0x00000000000003e6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003e6        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x00000000000003e6                exit
                0x00000000000003e6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003e6        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003ea                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000003ea
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100       0xc5
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100       0xc5 ./obj/avr/atmega644/gcc/bootloader.c.o
 *(.bss*)
 *(COMMON)
                0x00000000008001c5                PROVIDE (__bss_end, .)
                0x00000000000003ea                __data_load_start = LOADADDR (.data)
                0x00000000000003ea                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001c5        0x0
                0x00000000008001c5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001c5                PROVIDE (__noinit_end, .)
                0x00000000008001c5                _end = .
                0x00000000008001c5                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x123c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o
 .stab          0x00000000000006cc      0xb70 ./obj/avr/atmega644/gcc/bootloader.c.o
                                        0xb7c (size before relaxing)

.stabstr        0x0000000000000000      0xa36
 *(.stabstr)
 .stabstr       0x0000000000000000      0xa36 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm644.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./obj/avr/atmega644/gcc/bootloader.c.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(./obj/avr/atmega644/gcc/bootloader.elf elf32-avr)
LOAD linker stubs
